@startuml
' ===== Pessoas =====
abstract class Pessoa {
  - nome: String
  - telefone: String
  - cpf: String
}

class Usuario {
  - id: Long
  - email: String
  - senha: String
}

class Funcionario extends Pessoa {
  - id: Long
  - salario: Double
  - departamento: String
}

class Cliente extends Pessoa {
  - id: Long
  + enderecos: List<EnderecoCliente>
}

' ===== Fornecedor / Marca / Modelo =====
class Fornecedor {
  - id: Long
  - nome: String
  - cnpj: String
  - telefone: String
  + marcas: List<Marca>
}

class Marca {
  - id: Long
  - nome: String
  - cnpj: String
  + fornecedores: List<Fornecedor>
}

class Modelo {
  - id: Long
  - nome: String
  - anoLancamento: int
  - quantTecla: int
}

' ===== Piano =====
abstract class Piano {
  - id: Long
  - modelo: String
  - preco: Double
  - descricao: String
  - quantidadeEstoque: int
  - anoFabricacao: int
  - acabamento: String
}

class PianoAcustico
class PianoDigital
class PianoHibrido

' ===== Composição técnica do Piano =====
class Polifonia {
  - maxNotas: int
  - notasReais: int
}

class Conectividade {
  - entradaMidi: Boolean
  - saidaMidi: Boolean
  - usb: Boolean
  - bluetooth: Boolean
  - wifi: Boolean
}

class PortaExtra {
  - tipo: String
  - descricao: String
}

class SistemaSom {
  - numeroFalantes: int
  - potenciaWatts: Double
  - equalizador: Boolean
}

class Dimensoes {
  - altura: Double
  - largura: Double
  - profundidade: Double
  - peso: Double
}

class Garantia {
  - prazoMeses: int
  - tipo: String
}

class ImagemProduto {
  - url: String
  - descricao: String
}

class Acessorio {
  - id: Long
  - nome: String
  - preco: Double
}

' ===== Pedido =====
class Pedido {
  - id: Long
  - dataCriacao: LocalDateTime
  - status: StatusPedido
  - total: Double
}

class ItemPedido {
  - id: Long
  - quantidade: int
  - subtotal: Double
}

' ===== Pagamento =====
abstract class Pagamento {
  - id: Long
  - dataPagamento: LocalDateTime
  - valorPago: Double
}

class Pix extends Pagamento {
  - chave: String
  - qr: String
}

class Cartao extends Pagamento {
  - nomeTitular: String
  - numero: Long
  - vencimento: LocalDate
  - bandeira: String
  - cvv: Long
}

class Boleto extends Pagamento {
  - codigo: String
  - vencimento: LocalDate
  - emissao: LocalDate
  - qr: String
}

' ===== Endereco =====
class Endereco {
  - id: Long
  - rua: String
  - numero: String
  - bairro: String
  - cidade: String
  - cep: String
}

class Municipio {
  - id: Long
  - nome: String
}

class Estado {
  - id: Long
  - nome: String
  - sigla: String
}

class EnderecoPedido extends Endereco {}
class EnderecoCliente extends Endereco {}

' ===== Enums =====
enum TipoPiano {
  - ACOUSTICO
  - DIGITAL
  - HIBRIDO
}

enum StatusPedido {
  - PENDENTE
  - PROCESSANDO
  - ENVIADO
  - ENTREGUE
  - CANCELADO
}

enum TipoEndereco {
  - RESIDENCIAL
  - COMERCIAL
}

enum MetodoPagamento {
  - CARTAO_CREDITO
  - BOLETO
  - PIX
}

enum StatusPagamento {
  - PENDENTE
  - CONCLUIDO
  - CANCELADO
}

enum Perfil {
  - FUNCIONARIO
  - CLIENTE
}

' ===== Relacionamentos =====
Cliente "1" --> "*" Pedido
Cliente "1" --> "*" EnderecoCliente
Cliente "1" --> "1" Usuario
Pedido "1" --> "*" ItemPedido
Pedido "1" --> "1" EnderecoPedido
Pedido "1" --> "1" Pagamento
ItemPedido "1" -up-> "1" Piano
StatusPedido <-- Pedido
Fornecedor "*" --> "*" Marca
Fornecedor "1" <-- "*" Piano
Marca "1" <-- "*" Modelo
Modelo "1" <-- "*" Piano
Endereco "1" --> "1" Municipio
Municipio "1" --> "1" Estado
TipoEndereco <-- Endereco
MetodoPagamento <-- Pedido
StatusPagamento <-up- Pagamento
Perfil <-- Usuario
TipoPiano <-- Piano
Funcionario "1" --> "1" Usuario
Piano <|-- PianoAcustico
Piano <|-- PianoDigital
Piano <|-- PianoHibrido
PianoDigital *-- Polifonia
PianoHibrido *-- Polifonia
PianoDigital  *-- Conectividade
PianoHibrido *-- Conectividade
Conectividade "1" *-- "*" PortaExtra
PianoDigital *-- SistemaSom
PianoHibrido *-- SistemaSom
Piano *-- Dimensoes
Piano *-- Garantia
Piano *-- ImagemProduto
Piano "1" -- "1" Garantia
Piano "1" -- "0..*" ImagemProduto
Piano "0..*" -- "0..*" Acessorio
@enduml